// Code generated by SQLBoiler 4.16.2 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import "testing"

// This test suite runs each operation test in parallel.
// Example, if your database has 3 tables, the suite will run:
// table1, table2 and table3 Delete in parallel
// table1, table2 and table3 Insert in parallel, and so forth.
// It does NOT run each operation group in parallel.
// Separating the tests thusly grants avoidance of Postgres deadlocks.
func TestParent(t *testing.T) {
	t.Run("TestTables", testTestTables)
}

func TestDelete(t *testing.T) {
	t.Run("TestTables", testTestTablesDelete)
}

func TestQueryDeleteAll(t *testing.T) {
	t.Run("TestTables", testTestTablesQueryDeleteAll)
}

func TestSliceDeleteAll(t *testing.T) {
	t.Run("TestTables", testTestTablesSliceDeleteAll)
}

func TestExists(t *testing.T) {
	t.Run("TestTables", testTestTablesExists)
}

func TestFind(t *testing.T) {
	t.Run("TestTables", testTestTablesFind)
}

func TestBind(t *testing.T) {
	t.Run("TestTables", testTestTablesBind)
}

func TestOne(t *testing.T) {
	t.Run("TestTables", testTestTablesOne)
}

func TestAll(t *testing.T) {
	t.Run("TestTables", testTestTablesAll)
}

func TestCount(t *testing.T) {
	t.Run("TestTables", testTestTablesCount)
}

func TestHooks(t *testing.T) {
	t.Run("TestTables", testTestTablesHooks)
}

func TestInsert(t *testing.T) {
	t.Run("TestTables", testTestTablesInsert)
	t.Run("TestTables", testTestTablesInsertWhitelist)
}

func TestReload(t *testing.T) {
	t.Run("TestTables", testTestTablesReload)
}

func TestReloadAll(t *testing.T) {
	t.Run("TestTables", testTestTablesReloadAll)
}

func TestSelect(t *testing.T) {
	t.Run("TestTables", testTestTablesSelect)
}

func TestUpdate(t *testing.T) {
	t.Run("TestTables", testTestTablesUpdate)
}

func TestSliceUpdateAll(t *testing.T) {
	t.Run("TestTables", testTestTablesSliceUpdateAll)
}
